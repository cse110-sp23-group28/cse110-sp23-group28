{"version":3,"file":"noRestrictedSyntax.js","names":["_esquery","_interopRequireDefault","require","_iterateJsdoc","obj","__esModule","default","_default","iterateJsdoc","node","context","info","comment","sourceCode","report","options","length","contexts","foundContext","find","cntxt","esquery","matches","parse","visitorKeys","contextStr","message","contextSelected","meta","docs","description","url","fixable","schema","additionalProperties","properties","items","anyOf","type","required","nonGlobalSettings","exports","module"],"sources":["../../src/rules/noRestrictedSyntax.js"],"sourcesContent":["import esquery from 'esquery';\nimport iterateJsdoc from '../iterateJsdoc';\n\nexport default iterateJsdoc(({\n  node,\n  context,\n  info: {\n    comment,\n  },\n  sourceCode,\n  report,\n}) => {\n  if (!context.options.length) {\n    report('Rule `no-restricted-syntax` is missing a `contexts` option.');\n\n    return;\n  }\n\n  const {\n    contexts,\n  } = context.options[0];\n\n  const foundContext = contexts.find(\n    /**\n     * @param {string|{context: string, comment: string}} cntxt\n     * @returns {boolean}\n     */\n    (cntxt) => {\n      return typeof cntxt === 'string' ?\n        esquery.matches(\n          node,\n          esquery.parse(cntxt),\n          null,\n          // https://github.com/DefinitelyTyped/DefinitelyTyped/pull/65460\n          // @ts-expect-error\n          {\n            visitorKeys: sourceCode.visitorKeys,\n          },\n        ) :\n        (!cntxt.context || cntxt.context === 'any' ||\n          esquery.matches(\n            node,\n            esquery.parse(cntxt.context),\n            null,\n            // https://github.com/DefinitelyTyped/DefinitelyTyped/pull/65460\n            // @ts-expect-error\n            {\n              visitorKeys: sourceCode.visitorKeys,\n            },\n          )) &&\n          comment === cntxt.comment;\n    },\n  );\n\n  // We are not on the *particular* matching context/comment, so don't assume\n  //   we need reporting\n  if (!foundContext) {\n    return;\n  }\n\n  const contextStr = typeof foundContext === 'object' ?\n    foundContext.context ?? 'any' :\n    foundContext;\n  const message = foundContext?.message ??\n    'Syntax is restricted: {{context}}' +\n      (comment ? ' with {{comment}}' : '');\n\n  report(message, null, null, comment ? {\n    comment,\n    context: contextStr,\n  } : {\n    context: contextStr,\n  });\n}, {\n  contextSelected: true,\n  meta: {\n    docs: {\n      description: 'Reports when certain comment structures are present.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-no-restricted-syntax',\n    },\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          contexts: {\n            items: {\n              anyOf: [\n                {\n                  type: 'string',\n                },\n                {\n                  additionalProperties: false,\n                  properties: {\n                    comment: {\n                      type: 'string',\n                    },\n                    context: {\n                      type: 'string',\n                    },\n                    message: {\n                      type: 'string',\n                    },\n                  },\n                  type: 'object',\n                },\n              ],\n            },\n            type: 'array',\n          },\n        },\n        required: [\n          'contexts',\n        ],\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n  nonGlobalSettings: true,\n});\n"],"mappings":"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"}