{"version":3,"file":"exportParser.js","names":["_jsdoccomment","require","_debug","_interopRequireDefault","obj","__esModule","default","debug","debugModule","createNode","props","getSymbolValue","symbol","type","value","getIdentifier","node","globals","scope","opts","simpleIdentifier","identifierLiteral","name","block","createSymbol","getSymbol","opt","object","propertySymbol","property","computed","propertyValue","body","val","prototype","left","right","method","key","parent","prop","properties","includes","propVal","createBlockSymbol","isGlobal","window","special","id","valueSymbol","initVariables","childNode","expression","declaration","declarations","initWindow","kind","mapVariables","isExport","ancestorsOnly","init","exported","ANONYMOUS_DEFAULT","specifier","specifiers","local","findNode","cache","blockCache","slice","push","propval","Object","values","Array","isArray","some","exportTypes","Set","ignorableNestedTypes","getExportAncestor","nde","idx","ignorableIfDeep","has","canBeExportedByAncestorType","canExportChildrenType","isExportByAncestor","findExportedNode","isNodeExported","_globals$props$module","_globals$props$module2","moduleExports","module","exports","initModuleExports","esm","parseRecursive","globalVars","parse","ast","isUncommentedExport","sourceCode","settings","exportNode","findJSDocComment","parseResult","_default"],"sources":["../src/exportParser.js"],"sourcesContent":["import {\n  findJSDocComment,\n} from '@es-joy/jsdoccomment';\nimport debugModule from 'debug';\n\nconst debug = debugModule('requireExportJsdoc');\n\n/**\n * @returns {{\n *   props: object\n * }}\n */\nconst createNode = function () {\n  return {\n    props: {},\n  };\n};\n\n/**\n * @param {} symbol\n * @returns {null}\n */\nconst getSymbolValue = function (symbol) {\n  /* istanbul ignore next */\n  if (!symbol) {\n    /* istanbul ignore next */\n    return null;\n  }\n\n  /* istanbul ignore next */\n  if (symbol.type === 'literal') {\n    return symbol.value.value;\n  }\n\n  /* istanbul ignore next */\n  return null;\n};\n\n/**\n *\n * @param {} node\n * @param {} globals\n * @param {} scope\n * @param {} opts\n * @returns {}\n */\nconst getIdentifier = function (node, globals, scope, opts) {\n  if (opts.simpleIdentifier) {\n    // Type is Identier for noncomputed properties\n    const identifierLiteral = createNode();\n    identifierLiteral.type = 'literal';\n    identifierLiteral.value = {\n      value: node.name,\n    };\n\n    return identifierLiteral;\n  }\n\n  /* istanbul ignore next */\n  const block = scope || globals;\n\n  // As scopes are not currently supported, they are not traversed upwards recursively\n  if (block.props[node.name]) {\n    return block.props[node.name];\n  }\n\n  // Seems this will only be entered once scopes added and entered\n  /* istanbul ignore next */\n  if (globals.props[node.name]) {\n    return globals.props[node.name];\n  }\n\n  return null;\n};\n\nlet createSymbol = null;\n\n/* eslint-disable complexity -- Temporary */\n\n/**\n *\n * @param {} node\n * @param {} globals\n * @param {} scope\n * @param {} opt\n * @returns {}\n */\nconst getSymbol = function (node, globals, scope, opt) {\n  /* eslint-enable complexity -- Temporary */\n  const opts = opt || {};\n  /* istanbul ignore next */\n  // eslint-disable-next-line default-case\n  switch (node.type) {\n  case 'Identifier': {\n    return getIdentifier(node, globals, scope, opts);\n  }\n\n  case 'MemberExpression': {\n    const obj = getSymbol(node.object, globals, scope, opts);\n    const propertySymbol = getSymbol(node.property, globals, scope, {\n      simpleIdentifier: !node.computed,\n    });\n    const propertyValue = getSymbolValue(propertySymbol);\n\n    /* istanbul ignore next */\n    if (obj && propertyValue && obj.props[propertyValue]) {\n      const block = obj.props[propertyValue];\n\n      return block;\n    }\n\n    /*\n    if (opts.createMissingProps && propertyValue) {\n      obj.props[propertyValue] = createNode();\n\n      return obj.props[propertyValue];\n    }\n    */\n    /* istanbul ignore next */\n    debug(`MemberExpression: Missing property ${node.property.name}`);\n\n    /* istanbul ignore next */\n    return null;\n  }\n\n  case 'ClassExpression': {\n    return getSymbol(node.body, globals, scope, opts);\n  }\n\n  case 'TSTypeAliasDeclaration':\n  case 'TSEnumDeclaration': case 'TSInterfaceDeclaration':\n  case 'ClassDeclaration':\n  case 'FunctionExpression': case 'FunctionDeclaration':\n  case 'ArrowFunctionExpression': {\n    const val = createNode();\n    val.props.prototype = createNode();\n    val.props.prototype.type = 'object';\n    val.type = 'object';\n    val.value = node;\n\n    return val;\n  }\n\n  case 'AssignmentExpression': {\n    return createSymbol(node.left, globals, node.right, scope, opts);\n  }\n\n  case 'ClassBody': {\n    const val = createNode();\n    for (const method of node.body) {\n      val.props[method.key.name] = createNode();\n      val.props[method.key.name].type = 'object';\n      val.props[method.key.name].value = method.value;\n    }\n\n    val.type = 'object';\n    val.value = node.parent;\n\n    return val;\n  }\n\n  case 'ObjectExpression': {\n    const val = createNode();\n    val.type = 'object';\n    for (const prop of node.properties) {\n      if ([\n        // @typescript-eslint/parser, espree, acorn, etc.\n        'SpreadElement',\n\n        // @babel/eslint-parser\n        'ExperimentalSpreadProperty',\n      ].includes(prop.type)) {\n        continue;\n      }\n\n      const propVal = getSymbol(prop.value, globals, scope, opts);\n      /* istanbul ignore next */\n      if (propVal) {\n        val.props[prop.key.name] = propVal;\n      }\n    }\n\n    return val;\n  }\n\n  case 'Literal': {\n    const val = createNode();\n    val.type = 'literal';\n    val.value = node;\n\n    return val;\n  }\n  }\n\n  /* istanbul ignore next */\n  return null;\n};\n\n/**\n *\n * @param {} block\n * @param {} name\n * @param {} value\n * @param {} globals\n * @param {} isGlobal\n * @returns {void}\n */\nconst createBlockSymbol = function (block, name, value, globals, isGlobal) {\n  block.props[name] = value;\n  if (isGlobal && globals.props.window && globals.props.window.special) {\n    globals.props.window.props[name] = value;\n  }\n};\n\n/**\n *\n * @param {} node\n * @param {} globals\n * @param {} value\n * @param {} scope\n * @param {} isGlobal\n * @returns {null}\n */\ncreateSymbol = function (node, globals, value, scope, isGlobal) {\n  const block = scope || globals;\n  let symbol;\n  // eslint-disable-next-line default-case\n  switch (node.type) {\n  case 'FunctionDeclaration':\n  /* istanbul ignore next */\n  // Fall through\n  case 'TSEnumDeclaration': case 'TSInterfaceDeclaration':\n  /* istanbul ignore next */\n  // Fall through\n  case 'TSTypeAliasDeclaration': case 'ClassDeclaration': {\n    /* istanbul ignore next */\n    if (node.id && node.id.type === 'Identifier') {\n      return createSymbol(node.id, globals, node, globals);\n    }\n\n    /* istanbul ignore next */\n    break;\n  }\n\n  case 'Identifier': {\n    if (value) {\n      const valueSymbol = getSymbol(value, globals, block);\n      /* istanbul ignore next */\n      if (valueSymbol) {\n        createBlockSymbol(block, node.name, valueSymbol, globals, isGlobal);\n\n        return block.props[node.name];\n      }\n\n      /* istanbul ignore next */\n      debug('Identifier: Missing value symbol for %s', node.name);\n    } else {\n      createBlockSymbol(block, node.name, createNode(), globals, isGlobal);\n\n      return block.props[node.name];\n    }\n\n    /* istanbul ignore next */\n    break;\n  }\n\n  case 'MemberExpression': {\n    symbol = getSymbol(node.object, globals, block);\n\n    const propertySymbol = getSymbol(node.property, globals, block, {\n      simpleIdentifier: !node.computed,\n    });\n    const propertyValue = getSymbolValue(propertySymbol);\n    if (symbol && propertyValue) {\n      createBlockSymbol(symbol, propertyValue, getSymbol(value, globals, block), globals, isGlobal);\n\n      return symbol.props[propertyValue];\n    }\n\n    /* istanbul ignore next */\n    debug('MemberExpression: Missing symbol: %s', node.property.name);\n    break;\n  }\n  }\n\n  return null;\n};\n\n/**\n * Creates variables from variable definitions\n *\n * @param {} node\n * @param {} globals\n * @param {} opts\n * @returns {}\n */\nconst initVariables = function (node, globals, opts) {\n  // eslint-disable-next-line default-case\n  switch (node.type) {\n  case 'Program': {\n    for (const childNode of node.body) {\n      initVariables(childNode, globals, opts);\n    }\n\n    break;\n  }\n\n  case 'ExpressionStatement': {\n    initVariables(node.expression, globals, opts);\n    break;\n  }\n\n  case 'VariableDeclaration': {\n    for (const declaration of node.declarations) {\n      // let and const\n      const symbol = createSymbol(declaration.id, globals, null, globals);\n      if (opts.initWindow && node.kind === 'var' && globals.props.window) {\n        // If var, also add to window\n        globals.props.window.props[declaration.id.name] = symbol;\n      }\n    }\n\n    break;\n  }\n\n  case 'ExportNamedDeclaration': {\n    if (node.declaration) {\n      initVariables(node.declaration, globals, opts);\n    }\n\n    break;\n  }\n  }\n};\n\n/* eslint-disable complexity -- Temporary */\n\n/**\n * Populates variable maps using AST\n *\n * @param {} node\n * @param {} globals\n * @param {} opt\n * @param {} isExport\n * @returns {boolean}\n */\nconst mapVariables = function (node, globals, opt, isExport) {\n  /* eslint-enable complexity -- Temporary */\n  /* istanbul ignore next */\n  const opts = opt || {};\n  /* istanbul ignore next */\n  switch (node.type) {\n  case 'Program': {\n    if (opts.ancestorsOnly) {\n      return false;\n    }\n\n    for (const childNode of node.body) {\n      mapVariables(childNode, globals, opts);\n    }\n\n    break;\n  }\n\n  case 'ExpressionStatement': {\n    mapVariables(node.expression, globals, opts);\n    break;\n  }\n\n  case 'AssignmentExpression': {\n    createSymbol(node.left, globals, node.right);\n    break;\n  }\n\n  case 'VariableDeclaration': {\n    for (const declaration of node.declarations) {\n      const isGlobal = opts.initWindow && node.kind === 'var' && globals.props.window;\n      const symbol = createSymbol(declaration.id, globals, declaration.init, globals, isGlobal);\n      if (symbol && isExport) {\n        symbol.exported = true;\n      }\n    }\n\n    break;\n  }\n\n  case 'FunctionDeclaration': {\n    /* istanbul ignore next */\n    if (node.id.type === 'Identifier') {\n      createSymbol(node.id, globals, node, globals, true);\n    }\n\n    break;\n  }\n\n  case 'ExportDefaultDeclaration': {\n    const symbol = createSymbol(node.declaration, globals, node.declaration);\n    if (symbol) {\n      symbol.exported = true;\n    } else if (!node.id) {\n      globals.ANONYMOUS_DEFAULT = node.declaration;\n    }\n\n    break;\n  }\n\n  case 'ExportNamedDeclaration': {\n    if (node.declaration) {\n      if (node.declaration.type === 'VariableDeclaration') {\n        mapVariables(node.declaration, globals, opts, true);\n      } else {\n        const symbol = createSymbol(node.declaration, globals, node.declaration);\n        /* istanbul ignore next */\n        if (symbol) {\n          symbol.exported = true;\n        }\n      }\n    }\n\n    for (const specifier of node.specifiers) {\n      mapVariables(specifier, globals, opts);\n    }\n\n    break;\n  }\n\n  case 'ExportSpecifier': {\n    const symbol = getSymbol(node.local, globals, globals);\n    /* istanbul ignore next */\n    if (symbol) {\n      symbol.exported = true;\n    }\n\n    break;\n  }\n\n  case 'ClassDeclaration': {\n    createSymbol(node.id, globals, node.body, globals);\n    break;\n  }\n\n  default: {\n    /* istanbul ignore next */\n    return false;\n  }\n  }\n\n  return true;\n};\n\n/**\n *\n * @param {} node\n * @param {} block\n * @param {} cache\n * @returns {boolean}\n */\nconst findNode = function (node, block, cache) {\n  let blockCache = cache || [];\n  /* istanbul ignore next */\n  if (!block || blockCache.includes(block)) {\n    return false;\n  }\n\n  blockCache = blockCache.slice();\n  blockCache.push(block);\n\n  if (\n    (block.type === 'object' || block.type === 'MethodDefinition') &&\n    block.value === node\n  ) {\n    return true;\n  }\n\n  const {\n    props = block.body,\n  } = block;\n  for (const propval of Object.values(props || {})) {\n    if (Array.isArray(propval)) {\n      /* istanbul ignore if */\n      if (propval.some((val) => {\n        return findNode(node, val, blockCache);\n      })) {\n        return true;\n      }\n    } else if (findNode(node, propval, blockCache)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst exportTypes = new Set([\n  'ExportNamedDeclaration', 'ExportDefaultDeclaration',\n]);\nconst ignorableNestedTypes = new Set([\n  'FunctionDeclaration', 'ArrowFunctionExpression', 'FunctionExpression',\n]);\n\n/**\n * @param {} nde\n * @returns {}\n */\nconst getExportAncestor = function (nde) {\n  let node = nde;\n  let idx = 0;\n  const ignorableIfDeep = ignorableNestedTypes.has(nde?.type);\n  while (node) {\n    // Ignore functions nested more deeply than say `export default function () {}`\n    if (idx >= 2 && ignorableIfDeep) {\n      break;\n    }\n\n    if (exportTypes.has(node.type)) {\n      return node;\n    }\n\n    node = node.parent;\n    idx++;\n  }\n\n  return false;\n};\n\nconst canBeExportedByAncestorType = new Set([\n  'TSPropertySignature',\n  'TSMethodSignature',\n  'ClassProperty',\n  'PropertyDefinition',\n  'Method',\n]);\n\nconst canExportChildrenType = new Set([\n  'TSInterfaceBody',\n  'TSInterfaceDeclaration',\n  'TSTypeLiteral',\n  'TSTypeAliasDeclaration',\n  'ClassDeclaration',\n  'ClassBody',\n  'ClassDefinition',\n  'ClassExpression',\n  'Program',\n]);\n\n/**\n * @param {} nde\n * @returns {}\n */\nconst isExportByAncestor = function (nde) {\n  if (!canBeExportedByAncestorType.has(nde.type)) {\n    return false;\n  }\n\n  let node = nde.parent;\n  while (node) {\n    if (exportTypes.has(node.type)) {\n      return node;\n    }\n\n    if (!canExportChildrenType.has(node.type)) {\n      return false;\n    }\n\n    node = node.parent;\n  }\n\n  return false;\n};\n\n/**\n *\n * @param {} block\n * @param {} node\n * @param {} cache\n * @returns {boolean}\n */\nconst findExportedNode = function (block, node, cache) {\n  /* istanbul ignore next */\n  if (block === null) {\n    return false;\n  }\n\n  const blockCache = cache || [];\n  const {\n    props,\n  } = block;\n  for (const propval of Object.values(props)) {\n    blockCache.push(propval);\n    if (propval.exported && (node === propval.value || findNode(node, propval.value))) {\n      return true;\n    }\n\n    // No need to check `propval` for exported nodes as ESM\n    //  exports are only global\n  }\n\n  return false;\n};\n\n/**\n *\n * @param {} node\n * @param {} globals\n * @param {} opt\n * @returns {boolean}\n */\nconst isNodeExported = function (node, globals, opt) {\n  const moduleExports = globals.props.module?.props?.exports;\n  if (\n    opt.initModuleExports && moduleExports && findNode(node, moduleExports)\n  ) {\n    return true;\n  }\n\n  if (opt.initWindow && globals.props.window && findNode(node, globals.props.window)) {\n    return true;\n  }\n\n  if (opt.esm && findExportedNode(globals, node)) {\n    return true;\n  }\n\n  return false;\n};\n\n/**\n *\n * @param {} node\n * @param {} globalVars\n * @param {} opts\n * @returns {boolean}\n */\nconst parseRecursive = function (node, globalVars, opts) {\n  // Iterate from top using recursion - stop at first processed node from top\n  if (node.parent && parseRecursive(node.parent, globalVars, opts)) {\n    return true;\n  }\n\n  return mapVariables(node, globalVars, opts);\n};\n\n/**\n *\n * @param {} ast\n * @param {} node\n * @param {} opt\n * @returns {{\n *   globalVars: {\n *     props: {};\n *   };\n * }}\n */\nconst parse = function (ast, node, opt) {\n  /* istanbul ignore next */\n  const opts = opt || {\n    ancestorsOnly: false,\n    esm: true,\n    initModuleExports: true,\n    initWindow: true,\n  };\n\n  const globalVars = createNode();\n  if (opts.initModuleExports) {\n    globalVars.props.module = createNode();\n    globalVars.props.module.props.exports = createNode();\n    globalVars.props.exports = globalVars.props.module.props.exports;\n  }\n\n  if (opts.initWindow) {\n    globalVars.props.window = createNode();\n    globalVars.props.window.special = true;\n  }\n\n  if (opts.ancestorsOnly) {\n    parseRecursive(node, globalVars, opts);\n  } else {\n    initVariables(ast, globalVars, opts);\n    mapVariables(ast, globalVars, opts);\n  }\n\n  return {\n    globalVars,\n  };\n};\n\n/**\n *\n * @param {} node\n * @param {} sourceCode\n * @param {} opt\n * @param {} settings\n * @returns {boolean}\n */\nconst isUncommentedExport = function (node, sourceCode, opt, settings) {\n  // console.log({node});\n  // Optimize with ancestor check for esm\n  if (opt.esm) {\n    const exportNode = getExportAncestor(node);\n\n    // Is export node comment\n    if (exportNode && !findJSDocComment(exportNode, sourceCode, settings)) {\n      return true;\n    }\n\n    /**\n     * Some typescript types are not in variable map, but inherit exported (interface property and method)\n     */\n    if (\n      isExportByAncestor(node) &&\n      !findJSDocComment(node, sourceCode, settings)\n    ) {\n      return true;\n    }\n  }\n\n  const parseResult = parse(sourceCode.ast, node, opt);\n\n  return isNodeExported(node, parseResult.globalVars, opt);\n};\n\nexport default {\n  isUncommentedExport,\n  parse,\n};\n"],"mappings":"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"}